plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.7.9'
    id 'io.freefair.lombok' version '6.2.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'application'

group 'uk.nhs.adaptors'

application {
    mainClass = 'uk.nhs.adaptors.pss.translator.Gp2gpTranslatorApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':db-connector')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-jms:5.2.6.RELEASE'
    implementation ('org.apache.qpid:qpid-jms-client:1.2.0') {
        exclude group: 'io.netty', module: 'netty-codec-http'
    }
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
    useJUnitPlatform() {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        shouldRunAfter test
    }
}

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = true
        }
    }
}
