plugins {
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.26'
    id 'io.freefair.lombok' version '8.11'

    // Mutation testing
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'com.arcmutate.github' version '2.0.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'application'

group 'uk.nhs.adaptors'

application {
    mainClass = 'uk.nhs.adaptors.pss.translator.Gp2gpTranslatorApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation project(':db-connector')
    implementation project(':schema')
    implementation 'com.github.spullara.mustache.java:compiler:0.9.14'
    implementation 'org.jdbi:jdbi3-core:3.47.0'
    implementation 'org.jetbrains:annotations:24.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.3'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation 'org.skyscreamer:jsonassert:1.5.3'
    testImplementation 'org.awaitility:awaitility:4.2.2'

    pitest 'com.arcmutate:base:1.3.1'
    pitest 'com.arcmutate:pitest-git-plugin:2.0.0'

    implementation 'com.azure:azure-storage-blob:12.29.0'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.780')
    implementation 'com.amazonaws:aws-java-sdk-s3'
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }

    transformXmlToJson {
        java {
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += sourceSets.main.output + sourceSets.test.output
        }
    }
}

configurations {
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor

    transformXmlToJsonImplementation.extendsFrom testImplementation
}

task integrationTest(type: Test) {
    useJUnitPlatform() {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        shouldRunAfter test
    }
}

tasks.register('transformXmlToJson', JavaExec) {
    mainClass = 'uk.nhs.adaptors.pss.translator.TransformXmlToJsonApplication'
    classpath = sourceSets.transformXmlToJson.runtimeClasspath
}

check.dependsOn integrationTest

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    excludeFilter = rootProject.file('config/spotbugs/exclude.xml')
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

pitest {
    pitestVersion = '1.16.1'
    junit5PluginVersion = '1.2.1'
    outputFormats = ['gitci']

    // git feature limits analysis to contents of PR only
    features = ["+GIT(from[HEAD~1])"]

    // PRs which don't introduce any production code changes, shouldn't fail the Mutation Testing Actions Workflow
    failWhenNoMutations = false

    mutators = ['STRONGER', 'EXTENDED_ALL']

    threads = project.getGradle().getStartParameter().getMaxWorkerCount()
}

pitestGithub {
    deleteOldSummaries = true
}
